---
export const prerender = false; // Enable server-side rendering

import Layout from "../../layouts/Layout.astro";
import Header from "../../components/Header";
import TemplateReviews from "../../components/TemplateReviews";
import { Toaster } from "@/components/ui/sonner";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { CopyButton } from "@/components/CopyButton";

const { id } = Astro.params;
const API_BASE_URL = import.meta.env.PUBLIC_API_URL || "http://localhost:8080";
---

<Layout title="Template Details - Dotfiles Manager">
  <Header client:load />

  <div class="container py-12">
    <div id="template-container" class="space-y-8">
      <!-- Loading state -->
      <div class="animate-pulse space-y-4">
        <div class="h-12 bg-muted rounded w-3/4"></div>
        <div class="h-24 bg-muted rounded"></div>
      </div>
    </div>

    <!-- Reviews Section -->
    <div class="mt-12">
      <TemplateReviews templateId={id} client:load />
    </div>
  </div>

  <script type="module" define:vars={{ templateId: id, API_BASE_URL }}>
    async function loadTemplate() {
      try {
        const response = await fetch(`${API_BASE_URL}/api/templates/${templateId}`);
        if (!response.ok) throw new Error("Failed to fetch template");

        const template = await response.json();

        // Render template details
        const container = document.getElementById("template-container");
        container.innerHTML = `
          <div>
            <div class="flex items-start justify-between mb-6">
              <div>
                <h1 class="text-4xl font-bold mb-2">${template.metadata?.name || template.name}</h1>
                <p class="text-lg text-muted-foreground">${template.metadata?.description || 'No description'}</p>
              </div>
              ${template.featured ? '<span class="inline-flex items-center rounded-full bg-primary px-3 py-1 text-sm font-medium text-primary-foreground">‚≠ê Featured</span>' : ''}
            </div>

            <div class="grid gap-6 md:grid-cols-3 mb-8">
              <div class="rounded-lg border bg-card p-6">
                <div class="text-3xl font-bold">${template.downloads || 0}</div>
                <div class="text-sm text-muted-foreground">Downloads</div>
              </div>
              <div class="rounded-lg border bg-card p-6">
                <div class="text-3xl font-bold">${template.brews?.length || 0}</div>
                <div class="text-sm text-muted-foreground">Brew Packages</div>
              </div>
              <div class="rounded-lg border bg-card p-6">
                <div class="text-3xl font-bold">${template.casks?.length || 0}</div>
                <div class="text-sm text-muted-foreground">Cask Apps</div>
              </div>
            </div>

            <!-- CLI Installation Card -->
            <div class="rounded-lg border bg-card p-6 mb-6">
              <h3 class="text-lg font-semibold mb-4">üöÄ Install with CLI</h3>
              <div class="relative group">
                <pre class="rounded-lg bg-muted p-4 pr-12 overflow-x-auto text-sm"><code>dotfiles clone ${API_BASE_URL}/api/templates/${template.id}</code></pre>
                <div class="absolute top-2 right-2">
                  <button
                    onclick="copyToClipboard('dotfiles clone ${API_BASE_URL}/api/templates/${template.id}')"
                    class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-8 w-8"
                    title="Copy to clipboard"
                  >
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                      <rect width="14" height="14" x="8" y="8" rx="2" ry="2"/>
                      <path d="M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"/>
                    </svg>
                  </button>
                </div>
              </div>
            </div>

            <!-- Global Hooks Card -->
            ${template.hooks ? `
            <div class="grid gap-6 mb-6">
              <div class="rounded-lg border bg-card">
                <div class="p-6">
                  <h3 class="text-lg font-semibold mb-4">ü™ù Global Hooks</h3>
                  <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    ${template.hooks.pre_install && template.hooks.pre_install.length > 0 ? `
                      <div>
                        <p class="text-sm font-medium mb-2">Pre-Install</p>
                        ${template.hooks.pre_install.map(hook => `
                          <code class="block text-xs bg-muted rounded p-2 mb-1">${hook}</code>
                        `).join('')}
                      </div>
                    ` : ''}
                    ${template.hooks.post_install && template.hooks.post_install.length > 0 ? `
                      <div>
                        <p class="text-sm font-medium mb-2">Post-Install</p>
                        ${template.hooks.post_install.map(hook => `
                          <code class="block text-xs bg-muted rounded p-2 mb-1">${hook}</code>
                        `).join('')}
                      </div>
                    ` : ''}
                    ${template.hooks.pre_stow && template.hooks.pre_stow.length > 0 ? `
                      <div>
                        <p class="text-sm font-medium mb-2">Pre-Stow</p>
                        ${template.hooks.pre_stow.map(hook => `
                          <code class="block text-xs bg-muted rounded p-2 mb-1">${hook}</code>
                        `).join('')}
                      </div>
                    ` : ''}
                    ${template.hooks.post_stow && template.hooks.post_stow.length > 0 ? `
                      <div>
                        <p class="text-sm font-medium mb-2">Post-Stow</p>
                        ${template.hooks.post_stow.map(hook => `
                          <code class="block text-xs bg-muted rounded p-2 mb-1">${hook}</code>
                        `).join('')}
                      </div>
                    ` : ''}
                  </div>
                </div>
              </div>
            </div>
            ` : ''}

            <div class="grid gap-6 md:grid-cols-2">
              <!-- Packages Card -->
              <div class="rounded-lg border bg-card">
                <div class="p-6">
                  <h3 class="text-lg font-semibold mb-4">üì¶ Packages</h3>

                  ${template.brews && template.brews.length > 0 ? `
                    <div class="mb-4">
                      <h4 class="text-sm font-medium mb-2">Homebrew Formulae</h4>
                      <div class="flex flex-wrap gap-2">
                        ${template.brews.map(brew => `<span class="inline-flex items-center rounded-md bg-secondary px-2 py-1 text-xs font-medium">${brew}</span>`).join('')}
                      </div>
                    </div>
                  ` : ''}

                  ${template.casks && template.casks.length > 0 ? `
                    <div class="mb-4">
                      <h4 class="text-sm font-medium mb-2">Cask Applications</h4>
                      <div class="flex flex-wrap gap-2">
                        ${template.casks.map(cask => `<span class="inline-flex items-center rounded-md bg-secondary px-2 py-1 text-xs font-medium">${cask}</span>`).join('')}
                      </div>
                    </div>
                  ` : ''}

                  ${template.taps && template.taps.length > 0 ? `
                    <div>
                      <h4 class="text-sm font-medium mb-2">Taps</h4>
                      <div class="flex flex-wrap gap-2">
                        ${template.taps.map(tap => `<span class="inline-flex items-center rounded-md bg-secondary px-2 py-1 text-xs font-medium">${tap}</span>`).join('')}
                      </div>
                    </div>
                  ` : ''}
                </div>
              </div>

              <!-- Package Hooks Card -->
              ${template.package_configs && Object.keys(template.package_configs).length > 0 ? `
              <div class="rounded-lg border bg-card">
                <div class="p-6">
                  <h3 class="text-lg font-semibold mb-4">ü™ù Package Hooks</h3>
                  <div class="space-y-4">
                    ${Object.entries(template.package_configs).map(([pkg, config]) => `
                      <div class="rounded-lg bg-muted p-3">
                        <h4 class="text-sm font-semibold mb-2">${pkg}</h4>
                        ${config.pre_install && config.pre_install.length > 0 ? `
                          <div class="mb-2">
                            <p class="text-xs text-muted-foreground mb-1">Pre-install:</p>
                            ${config.pre_install.map(hook => `
                              <code class="block text-xs bg-background rounded p-2 mb-1">${hook}</code>
                            `).join('')}
                          </div>
                        ` : ''}
                        ${config.post_install && config.post_install.length > 0 ? `
                          <div>
                            <p class="text-xs text-muted-foreground mb-1">Post-install:</p>
                            ${config.post_install.map(hook => `
                              <code class="block text-xs bg-background rounded p-2 mb-1">${hook}</code>
                            `).join('')}
                          </div>
                        ` : ''}
                      </div>
                    `).join('')}
                  </div>
                </div>
              </div>
              ` : ''}

              <!-- Metadata Card -->
              <div class="rounded-lg border bg-card">
                <div class="p-6">
                  <h3 class="text-lg font-semibold mb-4">‚ÑπÔ∏è Information</h3>

                  <div class="space-y-3 text-sm">
                    <div>
                      <span class="text-muted-foreground">Author:</span>
                      <span class="ml-2 font-medium">${template.metadata?.author || 'Unknown'}</span>
                    </div>
                    <div>
                      <span class="text-muted-foreground">Version:</span>
                      <span class="ml-2 font-medium">${template.metadata?.version || '1.0.0'}</span>
                    </div>
                    <div>
                      <span class="text-muted-foreground">Created:</span>
                      <span class="ml-2 font-medium">${new Date(template.created_at).toLocaleDateString()}</span>
                    </div>
                    <div>
                      <span class="text-muted-foreground">Updated:</span>
                      <span class="ml-2 font-medium">${new Date(template.updated_at).toLocaleDateString()}</span>
                    </div>
                  </div>

                  ${template.metadata?.tags && template.metadata.tags.length > 0 ? `
                    <div class="mt-4">
                      <h4 class="text-sm font-medium mb-2">Tags</h4>
                      <div class="flex flex-wrap gap-2">
                        ${template.metadata.tags.map(tag => `<span class="inline-flex items-center rounded-full bg-primary/10 px-3 py-1 text-xs font-medium text-primary">${tag}</span>`).join('')}
                      </div>
                    </div>
                  ` : ''}

                  <button
                    onclick="downloadTemplate('${template.id}', '${template.metadata?.name || template.name}')"
                    class="inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2 w-full mt-6"
                  >
                    Download Template
                  </button>
                </div>
              </div>
            </div>
          </div>
        `;
      } catch (error) {
        console.error("Error loading template:", error);
        const container = document.getElementById("template-container");
        container.innerHTML = `
          <div class="rounded-lg border border-destructive bg-destructive/10 p-6 text-center">
            <p class="text-destructive">Failed to load template. Please try again.</p>
          </div>
        `;
      }
    }

    async function downloadTemplate(id, name) {
      try {
        const response = await fetch(`${API_BASE_URL}/api/templates/${id}/download`, {
          credentials: 'include'
        });
        if (!response.ok) throw new Error("Failed to download");

        const data = await response.json();
        const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `${name.replace(/\s+/g, '-').toLowerCase()}.json`;
        document.body.appendChild(a);
        a.click();
        window.URL.revokeObjectURL(url);
        document.body.removeChild(a);
      } catch (error) {
        alert('Failed to download template');
      }
    }

    function copyToClipboard(text) {
      navigator.clipboard.writeText(text).then(() => {
        // Could add a toast notification here
        console.log('Copied to clipboard');
      }).catch(err => {
        console.error('Failed to copy:', err);
      });
    }

    window.downloadTemplate = downloadTemplate;
    window.copyToClipboard = copyToClipboard;
    loadTemplate();
  </script>
</Layout>
